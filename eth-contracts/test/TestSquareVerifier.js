// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps


// Test verification with incorrect proof

var Test = require('../config/testConfig.js');

contract('Verifier', async (accounts) => {

  var config;
  var proof;
  var input;

  before('setup contract', async () => {
    config = await Test.Config(accounts);
    proof = config.proof;
    input = config.input;
  });

  describe('verification with correct proof', function () {

    // Test verification with correct proof
    it('Verifier.verifyTx(..) returns true with correct proof', async () => {
      const result = await config.verifier.verifyTx.call(
        proof.a,
        proof.b,
        proof.c,
        input
      )
      console.log("The result is :" + result)
      assert(result, 'Incorrect Proof results')
    })
  });

  describe('verification with incorrect proof', function () {

    // Test verification with incorrect proof
    it('Verifier.verifyTx(..) returns false with incorrect proof', async () => {
      const result = await config.verifier.verifyTx.call(
        proof.c,
        proof.b,
        proof.a,
        input
      )
      console.log("The result is :" + result)
      assert(!result, 'Incorrect Proof results')
    })
  });

});
